#!/usr/bin/env ruby
require_relative '../lib/common/common.rb'
require_relative '../lib/indexer/indexer.rb'

# TODO: Den Code übersichtlicher machen.

module Indexer
  class Main
    def initialize
      @logger = Common::Logger.new({labels: {tasks: "Aufgaben", tasks_per_second: "Aufgaben/s"}})
      @logger.add_output($stdout, Common::Logger::INFO)
      @progress = @logger.progress_logger(Common::OrderedHash.new([[:tasks, 0], [:tasks_per_second, nil]]))
      @progress[:tasks_per_second] = proc{|p| p.elapsed_time}
    end
    
    def run
      # In Threads einzelne Dokumente indexieren.
      @logger.log_info "10'000 Dokumente werden indexiert und anschliessend in den Hauptindex eingegliedert."
      @progress.start_display(5.0)
      
      cache = IndexingCache.new
      Common::WorkerThreads.new(10).run do
        while @progress[:tasks] < 10_000 && (doc_id = Indexer::Database.index_queue_fetch)
          Task.load(doc_id).run(cache)
          @progress[:tasks] += 1
        end
      end
      @progress.stop_display
      cache.write_to_disk
      
      # Sortieren der Einträge beginnen...
      @logger.log_info "Sortieren der Zwischenergebnisse gestartet."
      temporary_words = cache.words
      cache = nil
      @logger.log_info "Anzahl zu sortierender Dateien: #{tempfiles.size}"
      
      @progress.restart_display
      Common::WorkerThreads.new(10).run do
        while (word = temporary_words.pop)
          # Ablauf:
          # 1. Die einzelnen Blöcke des temporären Postings individuell sortieren.
          # 2. Temporäres und bereits existierendes Posting verbinden...
          # 3. Das Posting sortieren...
          
          # 1.
          tmp_posting = Indexer::Postings.new(word, temporary: true, load: true)
          tmp_posting.blocks.each do |block|
            block.bin_entries = block.bin_entries.sort
            block.save
          end
          
          # 2.
          stored_posting = Indexer::Postings.new(word, temporary: false, load: true)
          stored_posting.insert_from(tmp_posting)
          tmp_posting.delete
          
          # 3.
          sorter = Indexer::PostingsSorter.new(stored_posting)
          sorter.sort_blocks
        end
      end
      @progress.stop_display
    
      @logger.log_info "10'000 Dokumente erfolgreich indexiert und in Hauptindex eingegliedert."
    end
  end
end


if __FILE__ == $0
  Indexer::Main.new.run()
end
